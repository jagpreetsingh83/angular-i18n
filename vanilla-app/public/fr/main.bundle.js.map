{"version":3,"sources":["/Users/jagobhi/Work/github/Angular/angular-i18n-links/src/$_lazy_route_resource lazy","/Users/jagobhi/Work/github/Angular/angular-i18n-links/src/app/app.component.html","/Users/jagobhi/Work/github/Angular/angular-i18n-links/src/app/app.component.ts","/Users/jagobhi/Work/github/Angular/angular-i18n-links/src/app/app.module.ts","/Users/jagobhi/Work/github/Angular/angular-i18n-links/src/environments/environment.ts","/Users/jagobhi/Work/github/Angular/angular-i18n-links/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GCPI,kIAAqC,kGACjC,iJAA0B,2FAAc,MAAI,yFAChD,iCADO,wIAAsB,GAAzB,YAA0B,EAAvB,SAAsB,GAAC,0EAAc;6GAE5C,kIAAqC,uMAAe;6GAJxD,kIAA6C,8FACzC,ybAAqC,IAE9B,yFACP,ybAAqC,IAAsB,qFAC/D,mDAJU,kDAA8B,YAApC,YAAqC,EAA/B,SAA8B,GAG9B,kDAA8B,YAApC,YAAqC,EAA/B,SAA8B;6GANxC,gIAAS,KAAT,qGAAkB,MAAY,uFAE9B,2gBAA6C,iDAA/B,mBAA8B,YAA5C,YAA6C,EAA/B,SAA8B;;;;;;;;;;;;ACA5C;AAAA;IAUE,sBAAyC,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;QAJzD,cAAS,GAAG;YACV,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE;YAChC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;SAClC,CAAC;IAC2D,CAAC;IAChE,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACND;AAAA;IAAA;IAUyB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;ACjBnB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;;;;;;;;;;;;;;;;;;;ACF6C;AAIU;;;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,6EAAc,EAAE,CAAC;AACnB,CAAC;AAED,oFAAwB,uBAAgB,uFAAW;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jagobhi/Work/github/Angular/angular-i18n-links/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","<h1 i18n>Welcome, Rogers!</h1>\n\n<ng-container *ngFor=\"let lang of languages\">\n    <span *ngIf=\"lang.code !== localeId\">\n        <a href=\"/{{lang.code}}/\">{{lang.label}}</a>\n    </span>\n    <span *ngIf=\"lang.code === localeId\">{{lang.label}} </span>\n</ng-container>\n\n\n// WEBPACK FOOTER //\n// /Users/jagobhi/Work/github/Angular/angular-i18n-links/src/app/app.component.html","import { Component, LOCALE_ID, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  languages = [\n    { code: 'en', label: 'English' },\n    { code: 'fr', label: 'FranÃ§ais' }\n  ];\n  constructor(@Inject(LOCALE_ID) protected localeId: string) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jagobhi/Work/github/Angular/angular-i18n-links/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jagobhi/Work/github/Angular/angular-i18n-links/src/app/app.module.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/jagobhi/Work/github/Angular/angular-i18n-links/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/jagobhi/Work/github/Angular/angular-i18n-links/src/main.ts"],"sourceRoot":"webpack:///"}